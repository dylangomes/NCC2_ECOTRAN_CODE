% force parameters for subregional model
% parameters from file: DepthZoneSubmodels_CNP_11192021.xlsx
cd("../../NCC_SubRegional")
FILE ="SubregionSubmodels_NCC_10252022_AS_csv/zone 1.csv";
SubRegion = readmatrix(FILE);
Foodweb = readmatrix("SubregionSubmodels_NCC_10252022_AS_csv/zone 1.csv")


SUBREGION.DepthFoodWeb                        = FILE;
display(strcat("Read in: ",SUBREGION.DepthFoodWeb))

num_grps = ECOTRAN.num_grps;

SUBREGION.CONSUMPTION               = zeros(num_grps, num_grps);
SUBREGION.DIET                     	= zeros(num_grps, num_grps);
SUBREGION.import_diet              	= zeros(1, num_grps);

SUBREGION.DIET_NoCannibalism       	= [];
SUBREGION.CONSUMPTION_NoCannibalism	= [];

SUBREGION.ConsumptionBudget = SubRegion(235:242,6:107); 
SUBREGION.EnergyBudget      = SubRegion(249:350,6:107); 
        
SUBREGION.fate_metabolism = SubRegion(122:124,6:107); 
SUBREGION.fate_feces      = SubRegion(126:128,6:107);
SUBREGION.fate_senescence = SubRegion(130:132,6:107);    
SUBREGION.fate_eggs       = SubRegion(134:135,6:107);
SUBREGION.fate_predation  = SubRegion(137:230,6:107);

SUBREGION.ee            = SubRegion(360,6:107);
SUBREGION.ee_predation	= SubRegion(356,6:107);

% P/B terms
SUBREGION.pb              = ECOTRAN.pb'; % (1/y); pb for nutrients & detritus is always 1 regardless of time-frame; NOTE transpose
SUBREGION.pb              = SUBREGION.pb * (1/365); % (1/d); pb for nutrients & detritus is always 1 regardless of time-frame; NOTE transpose

% grab nutrients (groups ~1) and detritus (groups ~4)
cond = (ECOTRAN.GroupType<2) | (ECOTRAN.GroupType>=4 & ECOTRAN.GroupType<5);
SUBREGION.pb(cond)=1;% (1/d); pb for nutrients, eggs, & detritus is always 1 regardless of time-frame; NOTE transpose


SUBREGION.qb              =  ECOTRAN.qb'; % (1/y); qb for nutrients, detritus, & fleets is always 1 regardless of time-frame; NOTE transpose
SUBREGION.qb              = SUBREGION.qb * (1/365); % (1/d); qb for nutrients, detritus, & fleets is always 1 regardless of time-frame; NOTE transpose
% grab nutrients (groups ~1) and detritus (groups ~4) and fisheries (group == 5)
cond2 = or(ECOTRAN.GroupType==5 , cond)
SUBREGION.qb(cond2)	= 1; % (1/d); qb for nutrients, eggs, detritus, & fleets is always 1 regardless of time-frame; NOTE transpose


% % production_initial (really consumption_initial)
% %       initial q; (t WWT/km2/d); 
% %       from file DepthZoneSubmodels_CNP_11192021.xlsx (cell D166); 
% %       NOTE transpose to vertical vector
% SUBREGION.production_initial = [1	1650.63159	0	0.55200001	0.98399999	1.176000024	39.38399849	230.5081428	95.25261044	13.13930872	7.620174876	3.569868841	3.259684549	8.049150146	6.846105169	14.37798461	4.153639017	18.3979413	0.823847364	7.999457608	0	28.27951054	15.50170572	0.67731766	1.438113264	1.032414162	0	1.901769705	0.150480123	0.014965675	0.016680316	0	0	0.051134229	0.065009223	0	0	0	0	0	0	0.002097335	0.002523914	0.001950419	0	0	0.277611253	0.21225364	1169.45562	4.24787502	3400.332521	1276.41184	50.46195097	0.001875117	0	0	9.09937E-05	0.000374533]'; 

%       initial q; (mmoles N/m3/d); 
%       from INITIALproduction_nutrients for EPIpelagic (static, before time-dynamic run); see file "Initial_q_rates_06122022.xlsx" tab "Sheet 4"
SUBREGION.production_initial = [0.002214713	2.66E-05	0	2.90E-05	5.18E-05	6.19E-05	0.002072032	0.000698439	0.000765315	2.02E-05	2.86E-05	2.15E-05	1.18E-05	5.84E-05	4.65E-05	9.97E-05	3.07E-05	4.68E-05	1.65E-05	9.18E-06	0	1.26E-05	1.80E-06	9.17822E-06	5.16E-06	2.10E-05	0	5.32E-07	2.70E-08	2.51E-08	5.34E-08	0	0	1.66E-07	4.83E-07	0	0	0	0	0	0	5.12E-09	2.75E-10	6.46E-09	0	0	6.85E-07	4.23E-07	0.003938803	0.000655116	0.003555937	0.001753476	0.000792838	1.34E-08	3.65E-09	0	0	1.96E-10]'; % NOTE transpose

% %       initial q; (mmoles N/m3/d); 
% %       from last 5 years of calibrationH; see file "Initial_q_rates_06122022.xlsx" tab "Sheet 4"
% SUBREGION.production_initial	= [5.21E-05	0.000260408	0	4.46E-08	9.14E-08	1.05E-07	5.80E-06	2.42E-05	7.12E-05	7.22E-06	5.10E-06	2.51E-06	2.03E-06	6.21E-06	6.02E-06	1.32E-05	5.69E-07	1.46E-05	8.00E-07	6.60E-06	0	1.89E-05	1.73E-05	3.69E-07	1.56E-06	1.07E-06	0	2.21E-06	2.20E-07	1.51E-08	1.53E-08	0	0	4.70E-08	6.03E-08	0	0	0	0	0	0	2.70E-09	2.57E-09	1.91E-09	0	0	2.25E-07	1.58E-07	0.000568255	6.53E-05	0.000338817	0.000421917	7.65E-05	1.30E-10	0	0	7.67E-11	2.78E-10]'; 

% SUBREGION.production_initial = SUBREGION.production_initial * (1/(1000*1000));	% area to volumetric conversion; (t/m2/y)
% SUBREGION.production_initial = SUBREGION.production_initial * (1/BoxHeight);      % area to volumetric conversion; (t/m3/y)
% SUBREGION.production_initial = SUBREGION.production_initial * 1000000;            % (g/m3/y)
% SUBREGION.production_initial = SUBREGION.production_initial * 1000;               % (mg WWT/m3/y)
% SUBREGION.production_initial = SUBREGION.production_initial * (1/WWT_to_C);       % (mg C/m3/y)
% SUBREGION.production_initial = SUBREGION.production_initial * (1/atomic_mass_C);	% (mmole C/m3/y)
% SUBREGION.production_initial = SUBREGION.production_initial * (1/C_to_N_phytoplankton);	% (mmole N/m3/y)
% SUBREGION.production_initial = SUBREGION.production_initial * (1/365);            % (mmole N/m3/d)

% calculate biomass
SUBREGION.biomass = SUBREGION.production_initial .* (1./SUBREGION.qb); % (mmoles N/m3); initial biomasses (only primary producer biomasses really used)


% end m-file***************************************************************